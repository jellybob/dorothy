--- 
title: Using Vagrant to Create a Rails 3 Environment
date: 17/06/2010
category: Development

This article is going to cover using [Vagrant]("http://vagrantup.com")
to provide a portable development environment for Rails 3 applications,
with MongoDB or MySQL as a backend, and Unicorn as the web server.
~
As a bit of background, I'm doing this because we have a fairly even split
of Mac OS and Windows users among developers at work, and I don't want to
support Rails applications under Windows.

A Quick Introduction to Vagrant
-------------------------------

From the home page:

> Vagrant is a tool for building and distributing virtualized development
> environments.
>
> By providing automated creation and provisioning of virtual machines
> using Oracleâ€™s VirtualBox, Vagrant provides the tools to create and 
> configure lightweight, reproducible, and portable virtual environments.

It can also make use of [Chef]("http://www.opscode.com/chef") to automate
installation of software, which is handy, since I also plan to use Chef
to do installation of production servers.

Prerequisites
-------------

You'll need Ruby, Ruby Gems, and VirtualBox 3.1 or above installed.

Installing Vagrant
------------------

    gem install vagrant

Simples.

Create a Base Environment
-------------------------

Vagrant has a concept of "boxes", which are basic environment that can
then be further customised on a per-project basis. The base box from the
Vagrant site is horribly out of date now, so we're going to use one
from Lincoln Stoll.

Create an empty directory to work in, and then run the following:

    vagrant box add base http://s3.lds.li/vagrant/lucid64.box
    vagrant init
    vagrant up

Add the base box might take a while depending on your Internet connection,
since it's downloading an entire VM image, but you only need to do it once
because you can use the same box for multiple environments.

Running <code>vagrant init</code> creates a <code>Vagrantfile</code> in the
current directory which will be used to describe how the VM should be
configured. <code>vagrant up</code> starts the VM.

Aside: If Vagrant Up Fails
--------------------------

I've occasionally seen this error:

    The VM import failed! Try running `VBoxManage import` on the 
    box file manually for more verbose error output.

If that happens, it's trying to reimport the disk image a second time, which
VirtualBox doesn't like. Open up the VirtualBox GUI, open the "Virtual Media
Manager" from the "File" menu, and delete "vagrantbase_1.vmdk" in the list
of hard disks. After that, all should work again.


